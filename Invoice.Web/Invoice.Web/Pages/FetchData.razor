@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using Invoice.Web.Data
@using Microsoft.Extensions.Caching.Memory
@inject WeatherForecastService ForecastService
@inject IMemoryCache MemoryCache

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (WeatherForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in WeatherForecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected List<WeatherForecast>? WeatherForecasts { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await GetWeatherForecastAsync();

    }

    protected async Task GetWeatherForecastAsync()
    {
        WeatherForecasts = await MemoryCache.GetOrCreateAsync("weatherforecasts", async (options) =>
        {
            return await ForecastService.GetForecastAsync(DateTime.Now);
        });
    }
}
