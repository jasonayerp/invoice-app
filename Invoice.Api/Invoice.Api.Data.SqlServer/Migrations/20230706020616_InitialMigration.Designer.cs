// <auto-generated />
using System;
using Invoice.Api.Data.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invoice.Api.Data.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20230706020616_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Invoice.Api.Data.Entities.AddressEntity", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("AddressId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AddressId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("AddressLine1");

                    b.Property<string>("AddressLine2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("AddressLine2")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("AddressLine3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("AddressLine3")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("AddressLine4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("AddressLine4")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("NCHAR(2)")
                        .HasColumnName("CountryCode");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("Guid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("PostalCode");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Region");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcCreatedDate");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcDeletedDate")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcUpdatedDate")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("AddressId")
                        .HasName("PK_Addresses");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AddressId"));

                    b.HasIndex("City")
                        .HasDatabaseName("IX_Addresses_City");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("City"), false);

                    b.HasIndex("CountryCode")
                        .HasDatabaseName("IX_Addresses_CountryCode");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CountryCode"), false);

                    b.HasIndex("Region")
                        .HasDatabaseName("IX_Addresses_Region");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Region"), false);

                    b.HasIndex("AddressLine1", "City", "Region", "PostalCode", "CountryCode")
                        .IsUnique()
                        .HasDatabaseName("UX_Addresses_Address");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("AddressLine1", "City", "Region", "PostalCode", "CountryCode"), false);

                    b.ToTable("Addresses", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ClientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClientId"), 1L, 1);

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Email")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("Guid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Phone")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcCreatedDate");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcDeletedDate")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcUpdatedDate")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("ClientId")
                        .HasName("PK_Clients");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ClientId"));

                    b.HasIndex("Guid")
                        .HasDatabaseName("IX_Client_Guid");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Guid"), false);

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UX_Client_Name");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Clients", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Property<long>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceId"), 1L, 1);

                    b.Property<long>("BillFromAddressId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("BillFromAddressId");

                    b.Property<long>("BillToAddressId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("BillToAddressId");

                    b.Property<long>("ClientId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ClientId");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("Guid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("Number");

                    b.Property<short>("PaymentTerm")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("PaymentTerm");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcCreatedDate");

                    b.Property<DateTime>("UtcDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcDate");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcDeletedDate")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcUpdatedDate")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("InvoiceId")
                        .HasName("PK_Invoices");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("InvoiceId"));

                    b.HasIndex("BillFromAddressId")
                        .IsUnique();

                    b.HasIndex("BillToAddressId")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasDatabaseName("UX_Invoices_Number");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Number"), false);

                    b.ToTable("Invoices", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.Property<long>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceItemId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 4)
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("Amount");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Description");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceId");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT")
                        .HasColumnName("Quantity");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcCreatedDate");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcDeletedDate")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("UtcUpdatedDate")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("InvoiceItemId")
                        .HasName("PK_InvoiceItem");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("InvoiceItemId"));

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasDatabaseName("UX_InvoiceItems_Description");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Description"), false);

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.AddressEntity", "BillFromAddress")
                        .WithOne()
                        .HasForeignKey("Invoice.Api.Data.Entities.InvoiceEntity", "BillFromAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Invoices_Addresses_BillFromAddressId");

                    b.HasOne("Invoice.Api.Data.Entities.AddressEntity", "BillToAddress")
                        .WithOne()
                        .HasForeignKey("Invoice.Api.Data.Entities.InvoiceEntity", "BillToAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Invoices_Addresses_BillToAddressId");

                    b.HasOne("Invoice.Api.Data.Entities.ClientEntity", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Invoices_Clients_ClientId");

                    b.Navigation("BillFromAddress");

                    b.Navigation("BillToAddress");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.InvoiceEntity", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceItem_Invoice_InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
