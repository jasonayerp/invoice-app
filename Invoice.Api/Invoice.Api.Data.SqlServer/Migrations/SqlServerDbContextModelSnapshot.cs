// <auto-generated />
using System;
using Invoice.Api.Data.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invoice.Api.Data.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientAddressEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ClientAddressId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(96)")
                        .HasColumnName("City");

                    b.Property<long>("ClientId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ClientId");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("NCHAR(2)")
                        .HasColumnName("CountryCode");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("DeletedAt")
                        .HasDefaultValueSql("NULL");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("BIT")
                        .HasColumnName("IsDefault");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Line1");

                    b.Property<string>("Line2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Line2")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Line3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Line3")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Line4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Line4")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)")
                        .HasColumnName("PostalCode");

                    b.Property<string>("Region")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(96)")
                        .HasColumnName("Region")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id")
                        .HasName("PK_Addresses");

                    b.HasIndex("ClientId", "IsDefault")
                        .IsUnique()
                        .HasDatabaseName("UX_ClientAddresses_DefaultAddress");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClientId", "IsDefault"), false);

                    b.HasIndex("ClientId", "Line1", "Line2", "Line3", "Line4", "City", "Region", "PostalCode", "CountryCode")
                        .IsUnique()
                        .HasDatabaseName("UX_ClientAddresses_Address")
                        .HasFilter("[Line2] IS NOT NULL AND [Line3] IS NOT NULL AND [Line4] IS NOT NULL AND [Region] IS NOT NULL");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClientId", "Line1", "Line2", "Line3", "Line4", "City", "Region", "PostalCode", "CountryCode"), false);

                    b.ToTable("ClientAddresses", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("DeletedAt")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Email")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("Guid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(56)")
                        .HasColumnName("Name");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id")
                        .HasName("PK_Clients");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UX_Client_Name");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Clients", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ClientId");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE")
                        .HasColumnName("Date");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("DeletedAt")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DueDate");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("Guid")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)")
                        .HasColumnName("Number");

                    b.Property<short>("PaymentTermDays")
                        .HasColumnType("SMALLINT(2)")
                        .HasColumnName("PaymentTermDays");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT(1)")
                        .HasColumnName("Status");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id")
                        .HasName("PK_Invoices");

                    b.HasIndex("Date")
                        .HasDatabaseName("IX_Invoices_Date");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Date"), false);

                    b.HasIndex("DueDate")
                        .HasDatabaseName("IX_Invoices_DueDate");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("DueDate"), false);

                    b.HasIndex("ClientId", "Number")
                        .IsUnique()
                        .HasDatabaseName("UX_Invoices_ClientId_Number");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClientId", "Number"), false);

                    b.ToTable("Invoices", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("DeletedAt")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)")
                        .HasColumnName("Description");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("InvoiceId");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT")
                        .HasColumnName("Quantity");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalPrice")
                        .HasComputedColumnSql("([Quantity] * [UnitPrice])");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(19, 4)
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("UnitPrice");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIMEOFFSET(7)")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id")
                        .HasName("PK_InvoiceItems");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems", "dbo");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientAddressEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.ClientEntity", "Client")
                        .WithMany("Addresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ClientAddresses_Clients_ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.ClientEntity", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Invoices_Clients_ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.InvoiceEntity", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceItems_Invoices_InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
