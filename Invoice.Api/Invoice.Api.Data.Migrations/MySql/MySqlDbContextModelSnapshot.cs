// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Invoice.Api.Data.Migrations.MySql
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Invoice.Api.Data.Entities.AddressEntity", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("address_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("address_line_1");

                    b.Property<string>("AddressLine2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("address_line_2")
                        .HasDefaultValueSql("null");

                    b.Property<string>("AddressLine3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("address_line_3")
                        .HasDefaultValueSql("null");

                    b.Property<string>("AddressLine4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("address_line_4")
                        .HasDefaultValueSql("null");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("city");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("country_code");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(32)")
                        .HasColumnName("guid")
                        .HasDefaultValueSql("(UUID())");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("region");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_created_date");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_deleted_date")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_updated_date")
                        .HasDefaultValueSql("null");

                    b.HasKey("AddressId")
                        .HasName("pk_addresses")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("City")
                        .HasDatabaseName("ix_addresses_cty")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CountryCode")
                        .HasDatabaseName("ix_addresses_country_code")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Region")
                        .HasDatabaseName("ix_addresses_region")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("AddressLine1", "City", "Region", "PostalCode", "CountryCode")
                        .IsUnique()
                        .HasDatabaseName("ux_addresses_address")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("client_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("null");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(32)")
                        .HasColumnName("guid")
                        .HasDefaultValueSql("(UUID())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("phone")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_created_date");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_deleted_date")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_updated_date")
                        .HasDefaultValueSql("null");

                    b.HasKey("ClientId")
                        .HasName("pk_clients")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("Guid")
                        .HasDatabaseName("Iix_client_guid")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ux_client_name")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Property<long>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("invoice_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BillFromAddressId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("bill_from_address_id");

                    b.Property<long>("BillToAddressId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("bill_to_address_id");

                    b.Property<long>("ClientId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("client_id");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(32)")
                        .HasColumnName("guid")
                        .HasDefaultValueSql("(UUID())");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("number");

                    b.Property<short>("PaymentTerm")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("payment_term");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("status");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_created_date");

                    b.Property<DateTime>("UtcDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_date");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_deleted_date")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_updated_date")
                        .HasDefaultValueSql("null");

                    b.HasKey("InvoiceId")
                        .HasName("pk_invoices")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("BillFromAddressId")
                        .IsUnique();

                    b.HasIndex("BillToAddressId")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasDatabaseName("ux_invoices_number")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.Property<long>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("invoice_item_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 4)
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)")
                        .HasColumnName("description");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("invoice_id");

                    b.Property<short>("Quantity")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UtcCreatedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_created_date");

                    b.Property<DateTime?>("UtcDeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_deleted_date")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime?>("UtcUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("utc_updated_date")
                        .HasDefaultValueSql("null");

                    b.HasKey("InvoiceItemId")
                        .HasName("pk_invoice_item")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasDatabaseName("ux_invoice_items_description")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("InvoiceId");

                    b.ToTable("invoice_items", (string)null);
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.AddressEntity", "BillFromAddress")
                        .WithOne()
                        .HasForeignKey("Invoice.Api.Data.Entities.InvoiceEntity", "BillFromAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoices_addresses_bill_from_address_id");

                    b.HasOne("Invoice.Api.Data.Entities.AddressEntity", "BillToAddress")
                        .WithOne()
                        .HasForeignKey("Invoice.Api.Data.Entities.InvoiceEntity", "BillToAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoices_addresses_bill_ftom_address_id");

                    b.HasOne("Invoice.Api.Data.Entities.ClientEntity", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_invoices_clients_client_id");

                    b.Navigation("BillFromAddress");

                    b.Navigation("BillToAddress");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceItemEntity", b =>
                {
                    b.HasOne("Invoice.Api.Data.Entities.InvoiceEntity", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoice_item_invoice_invoice_id");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.ClientEntity", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Invoice.Api.Data.Entities.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
